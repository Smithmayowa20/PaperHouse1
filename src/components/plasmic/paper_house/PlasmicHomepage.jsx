// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 73KhD343S1ps4YNpRNR2Mg
// Component: l-Zr2oCvP9
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_paper_house.module.css"; // plasmic-import: 73KhD343S1ps4YNpRNR2Mg/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: l-Zr2oCvP9/css
import GroupIcon from "./icons/PlasmicIcon__Group"; // plasmic-import: pv_v81ctvL/icon
import IconsArrowDownSimpleLineIcon from "./icons/PlasmicIcon__IconsArrowDownSimpleLine"; // plasmic-import: pCMzSkne9Gk/icon
import IconsFileUploadLineIcon from "./icons/PlasmicIcon__IconsFileUploadLine"; // plasmic-import: aHRvMH2ljz5/icon
import IconsArrowRight2LineIcon from "./icons/PlasmicIcon__IconsArrowRight2Line"; // plasmic-import: FCkr3fpHxNj/icon
import IconsLoadingLineIcon from "./icons/PlasmicIcon__IconsLoadingLine"; // plasmic-import: txQrADCtHTa/icon
import IconsCloseCircleLineIcon from "./icons/PlasmicIcon__IconsCloseCircleLine"; // plasmic-import: 41hk-ShoQ8S/icon
import IconsArrowRight2Line2Icon from "./icons/PlasmicIcon__IconsArrowRight2Line2"; // plasmic-import: ojVcl76mJo1/icon

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"uploadFilesUploaded"}
            data-plasmic-override={overrides.uploadFilesUploaded}
            className={classNames(projectcss.all, sty.uploadFilesUploaded)}
          >
            <div
              data-plasmic-name={"uploadFilesUploaded2"}
              data-plasmic-override={overrides.uploadFilesUploaded2}
              className={classNames(projectcss.all, sty.uploadFilesUploaded2)}
            >
              <div
                data-plasmic-name={"navConnectedDesktopLight"}
                data-plasmic-override={overrides.navConnectedDesktopLight}
                className={classNames(
                  projectcss.all,
                  sty.navConnectedDesktopLight
                )}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"navContent"}
                  data-plasmic-override={overrides.navContent}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.navContent)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"leftContent"}
                    data-plasmic-override={overrides.leftContent}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.leftContent)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"logo"}
                      data-plasmic-override={overrides.logo}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.logo)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0XRg2
                        )}
                      >
                        {"Paperhouse"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"divider"}
                      data-plasmic-override={overrides.divider}
                      className={classNames(projectcss.all, sty.divider)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zx5Fs
                      )}
                    >
                      {"Search"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jaLWm
                      )}
                    >
                      {"How it works"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"actions"}
                    data-plasmic-override={overrides.actions}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.actions)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"buttons"}
                      data-plasmic-override={overrides.buttons}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.buttons)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"button"}
                        data-plasmic-override={overrides.button}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.button)}
                      >
                        <div
                          data-plasmic-name={"label"}
                          data-plasmic-override={overrides.label}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.label
                          )}
                        >
                          {"Upload"}
                        </div>
                      </p.Stack>

                      <div
                        data-plasmic-name={"notification"}
                        data-plasmic-override={overrides.notification}
                        className={classNames(projectcss.all, sty.notification)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"statusNew"}
                          data-plasmic-override={overrides.statusNew}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.statusNew)}
                        />

                        <div
                          data-plasmic-name={"iconsBellLine"}
                          data-plasmic-override={overrides.iconsBellLine}
                          className={classNames(
                            projectcss.all,
                            sty.iconsBellLine
                          )}
                        >
                          <div
                            data-plasmic-name={"notification2Line1"}
                            data-plasmic-override={overrides.notification2Line1}
                            className={classNames(
                              projectcss.all,
                              sty.notification2Line1
                            )}
                          >
                            <GroupIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dMEf2
                              )}
                              role={"img"}
                            />
                          </div>
                        </div>
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"button2"}
                        data-plasmic-override={overrides.button2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.button2)}
                      >
                        <div
                          data-plasmic-name={"avatar01"}
                          data-plasmic-override={overrides.avatar01}
                          className={classNames(projectcss.all, sty.avatar01)}
                        >
                          <div
                            data-plasmic-name={"austinWadeX6Uj51N5Ce8Unsplash1"}
                            data-plasmic-override={
                              overrides.austinWadeX6Uj51N5Ce8Unsplash1
                            }
                            className={classNames(
                              projectcss.all,
                              sty.austinWadeX6Uj51N5Ce8Unsplash1
                            )}
                          />
                        </div>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame925"}
                          data-plasmic-override={overrides.frame925}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame925)}
                        >
                          <div
                            data-plasmic-name={"label2"}
                            data-plasmic-override={overrides.label2}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.label2
                            )}
                          >
                            {"700698"}
                          </div>

                          <div
                            data-plasmic-name={"label3"}
                            data-plasmic-override={overrides.label3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.label3
                            )}
                          >
                            {"SOL"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>

                <div
                  data-plasmic-name={"divider2"}
                  data-plasmic-override={overrides.divider2}
                  className={classNames(projectcss.all, sty.divider2)}
                />
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"uploadItem02DesktopLight"}
                data-plasmic-override={overrides.uploadItem02DesktopLight}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  sty.uploadItem02DesktopLight
                )}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"itemDetail"}
                  data-plasmic-override={overrides.itemDetail}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.itemDetail)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame1001"}
                    data-plasmic-override={overrides.frame1001}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1001)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__c358R
                      )}
                    >
                      {"Create collectible"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"itemDetails"}
                    data-plasmic-override={overrides.itemDetails}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.itemDetails)}
                  >
                    <div
                      data-plasmic-name={"nftDetails"}
                      data-plasmic-override={overrides.nftDetails}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.nftDetails
                      )}
                    >
                      {"Item details"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"simpleInput"}
                      data-plasmic-override={overrides.simpleInput}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.simpleInput)}
                    >
                      <div
                        data-plasmic-name={"label4"}
                        data-plasmic-override={overrides.label4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label4
                        )}
                      >
                        {"Item name"}
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"singleInputField"}
                        data-plasmic-override={overrides.singleInputField}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.singleInputField
                        )}
                      >
                        <div
                          data-plasmic-name={"inputCaption"}
                          data-plasmic-override={overrides.inputCaption}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.inputCaption
                          )}
                        >
                          {"Black Golden Tiger"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"simpleInput2"}
                      data-plasmic-override={overrides.simpleInput2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.simpleInput2)}
                    >
                      <div
                        data-plasmic-name={"label5"}
                        data-plasmic-override={overrides.label5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label5
                        )}
                      >
                        {"Description"}
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"singleInputField2"}
                        data-plasmic-override={overrides.singleInputField2}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.singleInputField2
                        )}
                      >
                        <div
                          data-plasmic-name={"inputCaption2"}
                          data-plasmic-override={overrides.inputCaption2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.inputCaption2
                          )}
                        >
                          {
                            "This album was written in 2021 and it dives deep into IDK’s experiences..."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"simpleInput3"}
                      data-plasmic-override={overrides.simpleInput3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.simpleInput3)}
                    >
                      <div
                        data-plasmic-name={"label6"}
                        data-plasmic-override={overrides.label6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label6
                        )}
                      >
                        {"ADDITIONAL PERKS"}
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"singleInputField3"}
                        data-plasmic-override={overrides.singleInputField3}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.singleInputField3
                        )}
                      >
                        <div
                          data-plasmic-name={"inputCaption3"}
                          data-plasmic-override={overrides.inputCaption3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.inputCaption3
                          )}
                        >
                          {
                            "By holding this album you will gain exclusive access to IDK’s inner circle, as well as one free concert ticket each year."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"properties"}
                      data-plasmic-override={overrides.properties}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.properties)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"simpleInput4"}
                        data-plasmic-override={overrides.simpleInput4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.simpleInput4)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7EBfp
                          )}
                        >
                          {"ARTIST"}
                        </div>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"dropdownLightDefault"}
                          data-plasmic-override={overrides.dropdownLightDefault}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.dropdownLightDefault
                          )}
                        >
                          <div
                            data-plasmic-name={"_3DDesign"}
                            data-plasmic-override={overrides._3DDesign}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty._3DDesign
                            )}
                          >
                            {"IDK"}
                          </div>

                          <IconsArrowDownSimpleLineIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__snNjH
                            )}
                            role={"img"}
                          />
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"uploadFile"}
                    data-plasmic-override={overrides.uploadFile}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.uploadFile)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"title"}
                      data-plasmic-override={overrides.title}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.title)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__n01Fb
                        )}
                      >
                        {"Upload files"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sIdO1
                        )}
                      >
                        {"Drag all files here to upload"}
                      </div>
                    </p.Stack>

                    {false ? (
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"uploadField"}
                        data-plasmic-override={overrides.uploadField}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.uploadField)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame1009"}
                          data-plasmic-override={overrides.frame1009}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame1009)}
                        >
                          <IconsFileUploadLineIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__uag3P
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6Xin5
                            )}
                          >
                            {"PNG, GIF, WEBP, MP4 or MP3. Max 1Gb."}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"title2"}
                    data-plasmic-override={overrides.title2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wmTHk
                      )}
                    >
                      {"Release editions"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kHqxT
                      )}
                    >
                      {
                        "Gold editions must not exceed 10% of total editions created"
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"properties2"}
                    data-plasmic-override={overrides.properties2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.properties2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"simpleInput5"}
                      data-plasmic-override={overrides.simpleInput5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.simpleInput5)}
                    >
                      <div
                        data-plasmic-name={"label7"}
                        data-plasmic-override={overrides.label7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label7
                        )}
                      >
                        {"GOLD EDITIONS"}
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"singleInputField4"}
                        data-plasmic-override={overrides.singleInputField4}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.singleInputField4
                        )}
                      >
                        <div
                          data-plasmic-name={"inputCaption4"}
                          data-plasmic-override={overrides.inputCaption4}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.inputCaption4
                          )}
                        >
                          {"150"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"simpleInput6"}
                      data-plasmic-override={overrides.simpleInput6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.simpleInput6)}
                    >
                      <div
                        data-plasmic-name={"label8"}
                        data-plasmic-override={overrides.label8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label8
                        )}
                      >
                        {"STANDARD EDITIONS"}
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"singleInputField5"}
                        data-plasmic-override={overrides.singleInputField5}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.singleInputField5
                        )}
                      >
                        <div
                          data-plasmic-name={"inputCaption5"}
                          data-plasmic-override={overrides.inputCaption5}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.inputCaption5
                          )}
                        >
                          {"1000"}
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>

                  <div
                    data-plasmic-name={"divider3"}
                    data-plasmic-override={overrides.divider3}
                    className={classNames(projectcss.all, sty.divider3)}
                  />

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"buttons2"}
                    data-plasmic-override={overrides.buttons2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.buttons2)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"button3"}
                      data-plasmic-override={overrides.button3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.button3)}
                    >
                      <div
                        data-plasmic-name={"label9"}
                        data-plasmic-override={overrides.label9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label9
                        )}
                      >
                        {"Create item"}
                      </div>

                      <IconsArrowRight2LineIcon
                        className={classNames(projectcss.all, sty.svg__pN4Wp)}
                        role={"img"}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"button4"}
                      data-plasmic-override={overrides.button4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.button4)}
                    >
                      <div
                        data-plasmic-name={"label10"}
                        data-plasmic-override={overrides.label10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.label10
                        )}
                      >
                        {"Auto saving"}
                      </div>

                      <IconsLoadingLineIcon
                        className={classNames(projectcss.all, sty.svg__tUl0J)}
                        role={"img"}
                      />
                    </p.Stack>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame1007"}
                  data-plasmic-override={overrides.frame1007}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame1007)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i4BH
                    )}
                  >
                    {"Preview"}
                  </div>

                  <div
                    data-plasmic-name={"itemCard"}
                    data-plasmic-override={overrides.itemCard}
                    className={classNames(projectcss.all, sty.itemCard)}
                  >
                    <div
                      data-plasmic-name={"productImg"}
                      data-plasmic-override={overrides.productImg}
                      className={classNames(projectcss.all, sty.productImg)}
                    >
                      <div
                        data-plasmic-name={"media16"}
                        data-plasmic-override={overrides.media16}
                        className={classNames(projectcss.all, sty.media16)}
                      >
                        <div
                          data-plasmic-name={"imgLibimg132"}
                          data-plasmic-override={overrides.imgLibimg132}
                          className={classNames(
                            projectcss.all,
                            sty.imgLibimg132
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "michaelDziedzicD6FMtY6XCyMUnsplash1"
                              }
                              data-plasmic-override={
                                overrides.michaelDziedzicD6FMtY6XCyMUnsplash1
                              }
                              className={classNames(
                                projectcss.all,
                                sty.michaelDziedzicD6FMtY6XCyMUnsplash1
                              )}
                            />
                          ) : null}
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"idkAlbumClean111"}
                        data-plasmic-override={overrides.idkAlbumClean111}
                        className={classNames(
                          projectcss.all,
                          sty.idkAlbumClean111
                        )}
                      />
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"itemInfo"}
                      data-plasmic-override={overrides.itemInfo}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.itemInfo)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"titlePrice"}
                        data-plasmic-override={overrides.titlePrice}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.titlePrice)}
                      >
                        <div
                          data-plasmic-name={"usee4Urself"}
                          data-plasmic-override={overrides.usee4Urself}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.usee4Urself
                          )}
                        >
                          {"Black Golden Tiger"}
                        </div>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"label11"}
                          data-plasmic-override={overrides.label11}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.label11)}
                        >
                          <div
                            data-plasmic-name={"popular"}
                            data-plasmic-override={overrides.popular}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.popular
                            )}
                          >
                            {"243 SOL"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"titlePrice2"}
                        data-plasmic-override={overrides.titlePrice2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.titlePrice2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__siEnm
                          )}
                        >
                          {"IDK"}
                        </div>

                        <div
                          data-plasmic-name={"frame1092"}
                          data-plasmic-override={overrides.frame1092}
                          className={classNames(projectcss.all, sty.frame1092)}
                        >
                          <div
                            data-plasmic-name={"release"}
                            data-plasmic-override={overrides.release}
                            className={classNames(projectcss.all, sty.release)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___8Exfh
                              )}
                            >
                              {"RELEASE"}
                            </div>
                          </div>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"highestBid"}
                            data-plasmic-override={overrides.highestBid}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.highestBid
                            )}
                          />
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame942"}
                    data-plasmic-override={overrides.frame942}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame942)}
                  >
                    <IconsCloseCircleLineIcon
                      className={classNames(projectcss.all, sty.svg__m4I9S)}
                      role={"img"}
                    />

                    <div
                      data-plasmic-name={"label12"}
                      data-plasmic-override={overrides.label12}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label12
                      )}
                    >
                      {"Clear all"}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <div
                data-plasmic-name={"footerDesktopLight"}
                data-plasmic-override={overrides.footerDesktopLight}
                className={classNames(projectcss.all, sty.footerDesktopLight)}
              >
                <div
                  data-plasmic-name={"divider4"}
                  data-plasmic-override={overrides.divider4}
                  className={classNames(projectcss.all, sty.divider4)}
                />

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"footer05DesktopLight"}
                  data-plasmic-override={overrides.footer05DesktopLight}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.footer05DesktopLight
                  )}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame789"}
                    data-plasmic-override={overrides.frame789}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame789)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame787"}
                      data-plasmic-override={overrides.frame787}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame787)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame774"}
                        data-plasmic-override={overrides.frame774}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame774)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"logo2"}
                          data-plasmic-override={overrides.logo2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.logo2)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ceBk0
                            )}
                          >
                            {"Paperhouse"}
                          </div>
                        </p.Stack>

                        <div
                          data-plasmic-name={"letsMakeAGreatDesignTogerther"}
                          data-plasmic-override={
                            overrides.letsMakeAGreatDesignTogerther
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.letsMakeAGreatDesignTogerther
                          )}
                        >
                          {"An ecosystem for the new music industry."}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame783"}
                        data-plasmic-override={overrides.frame783}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame783)}
                      >
                        <div
                          data-plasmic-name={"crypter"}
                          data-plasmic-override={overrides.crypter}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.crypter
                          )}
                        >
                          {"From us"}
                        </div>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame726"}
                          data-plasmic-override={overrides.frame726}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame726)}
                        >
                          <div
                            data-plasmic-name={"about"}
                            data-plasmic-override={overrides.about}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.about
                            )}
                          >
                            {"Discover"}
                          </div>

                          <div
                            data-plasmic-name={"projects"}
                            data-plasmic-override={overrides.projects}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.projects
                            )}
                          >
                            {"Connect wallet"}
                          </div>

                          <div
                            data-plasmic-name={"whatWeDo"}
                            data-plasmic-override={overrides.whatWeDo}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.whatWeDo
                            )}
                          >
                            {"Create item"}
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__k7ZrQ
                              )}
                            >
                              {"Press"}
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xdWD
                              )}
                            >
                              {"Jobs"}
                            </div>
                          ) : null}
                        </p.Stack>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame784"}
                        data-plasmic-override={overrides.frame784}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame784)}
                      >
                        <div
                          data-plasmic-name={"info"}
                          data-plasmic-override={overrides.info}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.info
                          )}
                        >
                          {"Resources"}
                        </div>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame727"}
                          data-plasmic-override={overrides.frame727}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame727)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ytRif
                            )}
                          >
                            {"Download"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gPOf0
                            )}
                          >
                            {"Demos"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xtbUr
                            )}
                          >
                            {"Support"}
                          </div>
                        </p.Stack>
                      </p.Stack>

                      {false ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame786"}
                          data-plasmic-override={overrides.frame786}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame786)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oApQd
                            )}
                          >
                            {"Join Newsletter"}
                          </div>

                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"frame785"}
                            data-plasmic-override={overrides.frame785}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.frame785)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__nmwd5
                              )}
                            >
                              {
                                "Subscribe our newsletter to get more free design course and resource"
                              }
                            </div>

                            <div
                              data-plasmic-name={"singleInputField6"}
                              data-plasmic-override={
                                overrides.singleInputField6
                              }
                              className={classNames(
                                projectcss.all,
                                sty.singleInputField6
                              )}
                            >
                              <div
                                data-plasmic-name={"enterYourEmail"}
                                data-plasmic-override={overrides.enterYourEmail}
                                className={classNames(
                                  projectcss.all,
                                  sty.enterYourEmail
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__bQdb2
                                  )}
                                >
                                  {"Enter your email"}
                                </div>
                              </div>

                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"smallCircleButton"}
                                data-plasmic-override={
                                  overrides.smallCircleButton
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.smallCircleButton
                                )}
                              >
                                <IconsArrowRight2Line2Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__kj2Y6
                                  )}
                                  role={"img"}
                                />
                              </p.Stack>
                            </div>
                          </p.Stack>
                        </p.Stack>
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"bottomBar"}
                      data-plasmic-override={overrides.bottomBar}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.bottomBar)}
                    >
                      <div
                        data-plasmic-name={"divider5"}
                        data-plasmic-override={overrides.divider5}
                        className={classNames(projectcss.all, sty.divider5)}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"bottomBarContent"}
                        data-plasmic-override={overrides.bottomBarContent}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.bottomBarContent
                        )}
                      >
                        <div
                          data-plasmic-name={
                            "copyright2021Ui8LlcAllRightsReserved"
                          }
                          data-plasmic-override={
                            overrides.copyright2021Ui8LlcAllRightsReserved
                          }
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.copyright2021Ui8LlcAllRightsReserved
                          )}
                        >
                          {
                            "Copyright © 2021 Paperhouse LLC. All rights reserved."
                          }
                        </div>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"frame788"}
                          data-plasmic-override={overrides.frame788}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.frame788)}
                        >
                          <div
                            data-plasmic-name={"weUseCookiesForBetterService"}
                            data-plasmic-override={
                              overrides.weUseCookiesForBetterService
                            }
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.weUseCookiesForBetterService
                            )}
                          >
                            {"We’re hiring!"}
                          </div>

                          <div
                            data-plasmic-name={"accept"}
                            data-plasmic-override={overrides.accept}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.accept
                            )}
                          >
                            {"Apply"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "uploadFilesUploaded",
    "uploadFilesUploaded2",
    "navConnectedDesktopLight",
    "navContent",
    "leftContent",
    "logo",
    "divider",
    "actions",
    "buttons",
    "button",
    "label",
    "notification",
    "statusNew",
    "iconsBellLine",
    "notification2Line1",
    "button2",
    "avatar01",
    "austinWadeX6Uj51N5Ce8Unsplash1",
    "frame925",
    "label2",
    "label3",
    "divider2",
    "uploadItem02DesktopLight",
    "itemDetail",
    "frame1001",
    "itemDetails",
    "nftDetails",
    "simpleInput",
    "label4",
    "singleInputField",
    "inputCaption",
    "simpleInput2",
    "label5",
    "singleInputField2",
    "inputCaption2",
    "simpleInput3",
    "label6",
    "singleInputField3",
    "inputCaption3",
    "properties",
    "simpleInput4",
    "dropdownLightDefault",
    "_3DDesign",
    "uploadFile",
    "title",
    "uploadField",
    "frame1009",
    "title2",
    "properties2",
    "simpleInput5",
    "label7",
    "singleInputField4",
    "inputCaption4",
    "simpleInput6",
    "label8",
    "singleInputField5",
    "inputCaption5",
    "divider3",
    "buttons2",
    "button3",
    "label9",
    "button4",
    "label10",
    "frame1007",
    "itemCard",
    "productImg",
    "media16",
    "imgLibimg132",
    "michaelDziedzicD6FMtY6XCyMUnsplash1",
    "idkAlbumClean111",
    "itemInfo",
    "titlePrice",
    "usee4Urself",
    "label11",
    "popular",
    "titlePrice2",
    "frame1092",
    "release",
    "highestBid",
    "frame942",
    "label12",
    "footerDesktopLight",
    "divider4",
    "footer05DesktopLight",
    "frame789",
    "frame787",
    "frame774",
    "logo2",
    "letsMakeAGreatDesignTogerther",
    "frame783",
    "crypter",
    "frame726",
    "about",
    "projects",
    "whatWeDo",
    "frame784",
    "info",
    "frame727",
    "frame786",
    "frame785",
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton",
    "bottomBar",
    "divider5",
    "bottomBarContent",
    "copyright2021Ui8LlcAllRightsReserved",
    "frame788",
    "weUseCookiesForBetterService",
    "accept"
  ],

  uploadFilesUploaded: [
    "uploadFilesUploaded",
    "uploadFilesUploaded2",
    "navConnectedDesktopLight",
    "navContent",
    "leftContent",
    "logo",
    "divider",
    "actions",
    "buttons",
    "button",
    "label",
    "notification",
    "statusNew",
    "iconsBellLine",
    "notification2Line1",
    "button2",
    "avatar01",
    "austinWadeX6Uj51N5Ce8Unsplash1",
    "frame925",
    "label2",
    "label3",
    "divider2",
    "uploadItem02DesktopLight",
    "itemDetail",
    "frame1001",
    "itemDetails",
    "nftDetails",
    "simpleInput",
    "label4",
    "singleInputField",
    "inputCaption",
    "simpleInput2",
    "label5",
    "singleInputField2",
    "inputCaption2",
    "simpleInput3",
    "label6",
    "singleInputField3",
    "inputCaption3",
    "properties",
    "simpleInput4",
    "dropdownLightDefault",
    "_3DDesign",
    "uploadFile",
    "title",
    "uploadField",
    "frame1009",
    "title2",
    "properties2",
    "simpleInput5",
    "label7",
    "singleInputField4",
    "inputCaption4",
    "simpleInput6",
    "label8",
    "singleInputField5",
    "inputCaption5",
    "divider3",
    "buttons2",
    "button3",
    "label9",
    "button4",
    "label10",
    "frame1007",
    "itemCard",
    "productImg",
    "media16",
    "imgLibimg132",
    "michaelDziedzicD6FMtY6XCyMUnsplash1",
    "idkAlbumClean111",
    "itemInfo",
    "titlePrice",
    "usee4Urself",
    "label11",
    "popular",
    "titlePrice2",
    "frame1092",
    "release",
    "highestBid",
    "frame942",
    "label12",
    "footerDesktopLight",
    "divider4",
    "footer05DesktopLight",
    "frame789",
    "frame787",
    "frame774",
    "logo2",
    "letsMakeAGreatDesignTogerther",
    "frame783",
    "crypter",
    "frame726",
    "about",
    "projects",
    "whatWeDo",
    "frame784",
    "info",
    "frame727",
    "frame786",
    "frame785",
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton",
    "bottomBar",
    "divider5",
    "bottomBarContent",
    "copyright2021Ui8LlcAllRightsReserved",
    "frame788",
    "weUseCookiesForBetterService",
    "accept"
  ],

  uploadFilesUploaded2: [
    "uploadFilesUploaded2",
    "navConnectedDesktopLight",
    "navContent",
    "leftContent",
    "logo",
    "divider",
    "actions",
    "buttons",
    "button",
    "label",
    "notification",
    "statusNew",
    "iconsBellLine",
    "notification2Line1",
    "button2",
    "avatar01",
    "austinWadeX6Uj51N5Ce8Unsplash1",
    "frame925",
    "label2",
    "label3",
    "divider2",
    "uploadItem02DesktopLight",
    "itemDetail",
    "frame1001",
    "itemDetails",
    "nftDetails",
    "simpleInput",
    "label4",
    "singleInputField",
    "inputCaption",
    "simpleInput2",
    "label5",
    "singleInputField2",
    "inputCaption2",
    "simpleInput3",
    "label6",
    "singleInputField3",
    "inputCaption3",
    "properties",
    "simpleInput4",
    "dropdownLightDefault",
    "_3DDesign",
    "uploadFile",
    "title",
    "uploadField",
    "frame1009",
    "title2",
    "properties2",
    "simpleInput5",
    "label7",
    "singleInputField4",
    "inputCaption4",
    "simpleInput6",
    "label8",
    "singleInputField5",
    "inputCaption5",
    "divider3",
    "buttons2",
    "button3",
    "label9",
    "button4",
    "label10",
    "frame1007",
    "itemCard",
    "productImg",
    "media16",
    "imgLibimg132",
    "michaelDziedzicD6FMtY6XCyMUnsplash1",
    "idkAlbumClean111",
    "itemInfo",
    "titlePrice",
    "usee4Urself",
    "label11",
    "popular",
    "titlePrice2",
    "frame1092",
    "release",
    "highestBid",
    "frame942",
    "label12",
    "footerDesktopLight",
    "divider4",
    "footer05DesktopLight",
    "frame789",
    "frame787",
    "frame774",
    "logo2",
    "letsMakeAGreatDesignTogerther",
    "frame783",
    "crypter",
    "frame726",
    "about",
    "projects",
    "whatWeDo",
    "frame784",
    "info",
    "frame727",
    "frame786",
    "frame785",
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton",
    "bottomBar",
    "divider5",
    "bottomBarContent",
    "copyright2021Ui8LlcAllRightsReserved",
    "frame788",
    "weUseCookiesForBetterService",
    "accept"
  ],

  navConnectedDesktopLight: [
    "navConnectedDesktopLight",
    "navContent",
    "leftContent",
    "logo",
    "divider",
    "actions",
    "buttons",
    "button",
    "label",
    "notification",
    "statusNew",
    "iconsBellLine",
    "notification2Line1",
    "button2",
    "avatar01",
    "austinWadeX6Uj51N5Ce8Unsplash1",
    "frame925",
    "label2",
    "label3",
    "divider2"
  ],

  navContent: [
    "navContent",
    "leftContent",
    "logo",
    "divider",
    "actions",
    "buttons",
    "button",
    "label",
    "notification",
    "statusNew",
    "iconsBellLine",
    "notification2Line1",
    "button2",
    "avatar01",
    "austinWadeX6Uj51N5Ce8Unsplash1",
    "frame925",
    "label2",
    "label3"
  ],

  leftContent: ["leftContent", "logo", "divider"],
  logo: ["logo"],
  divider: ["divider"],
  actions: [
    "actions",
    "buttons",
    "button",
    "label",
    "notification",
    "statusNew",
    "iconsBellLine",
    "notification2Line1",
    "button2",
    "avatar01",
    "austinWadeX6Uj51N5Ce8Unsplash1",
    "frame925",
    "label2",
    "label3"
  ],

  buttons: [
    "buttons",
    "button",
    "label",
    "notification",
    "statusNew",
    "iconsBellLine",
    "notification2Line1",
    "button2",
    "avatar01",
    "austinWadeX6Uj51N5Ce8Unsplash1",
    "frame925",
    "label2",
    "label3"
  ],

  button: ["button", "label"],
  label: ["label"],
  notification: [
    "notification",
    "statusNew",
    "iconsBellLine",
    "notification2Line1"
  ],

  statusNew: ["statusNew"],
  iconsBellLine: ["iconsBellLine", "notification2Line1"],
  notification2Line1: ["notification2Line1"],
  button2: [
    "button2",
    "avatar01",
    "austinWadeX6Uj51N5Ce8Unsplash1",
    "frame925",
    "label2",
    "label3"
  ],

  avatar01: ["avatar01", "austinWadeX6Uj51N5Ce8Unsplash1"],
  austinWadeX6Uj51N5Ce8Unsplash1: ["austinWadeX6Uj51N5Ce8Unsplash1"],
  frame925: ["frame925", "label2", "label3"],
  label2: ["label2"],
  label3: ["label3"],
  divider2: ["divider2"],
  uploadItem02DesktopLight: [
    "uploadItem02DesktopLight",
    "itemDetail",
    "frame1001",
    "itemDetails",
    "nftDetails",
    "simpleInput",
    "label4",
    "singleInputField",
    "inputCaption",
    "simpleInput2",
    "label5",
    "singleInputField2",
    "inputCaption2",
    "simpleInput3",
    "label6",
    "singleInputField3",
    "inputCaption3",
    "properties",
    "simpleInput4",
    "dropdownLightDefault",
    "_3DDesign",
    "uploadFile",
    "title",
    "uploadField",
    "frame1009",
    "title2",
    "properties2",
    "simpleInput5",
    "label7",
    "singleInputField4",
    "inputCaption4",
    "simpleInput6",
    "label8",
    "singleInputField5",
    "inputCaption5",
    "divider3",
    "buttons2",
    "button3",
    "label9",
    "button4",
    "label10",
    "frame1007",
    "itemCard",
    "productImg",
    "media16",
    "imgLibimg132",
    "michaelDziedzicD6FMtY6XCyMUnsplash1",
    "idkAlbumClean111",
    "itemInfo",
    "titlePrice",
    "usee4Urself",
    "label11",
    "popular",
    "titlePrice2",
    "frame1092",
    "release",
    "highestBid",
    "frame942",
    "label12"
  ],

  itemDetail: [
    "itemDetail",
    "frame1001",
    "itemDetails",
    "nftDetails",
    "simpleInput",
    "label4",
    "singleInputField",
    "inputCaption",
    "simpleInput2",
    "label5",
    "singleInputField2",
    "inputCaption2",
    "simpleInput3",
    "label6",
    "singleInputField3",
    "inputCaption3",
    "properties",
    "simpleInput4",
    "dropdownLightDefault",
    "_3DDesign",
    "uploadFile",
    "title",
    "uploadField",
    "frame1009",
    "title2",
    "properties2",
    "simpleInput5",
    "label7",
    "singleInputField4",
    "inputCaption4",
    "simpleInput6",
    "label8",
    "singleInputField5",
    "inputCaption5",
    "divider3",
    "buttons2",
    "button3",
    "label9",
    "button4",
    "label10"
  ],

  frame1001: ["frame1001"],
  itemDetails: [
    "itemDetails",
    "nftDetails",
    "simpleInput",
    "label4",
    "singleInputField",
    "inputCaption",
    "simpleInput2",
    "label5",
    "singleInputField2",
    "inputCaption2",
    "simpleInput3",
    "label6",
    "singleInputField3",
    "inputCaption3",
    "properties",
    "simpleInput4",
    "dropdownLightDefault",
    "_3DDesign"
  ],

  nftDetails: ["nftDetails"],
  simpleInput: ["simpleInput", "label4", "singleInputField", "inputCaption"],
  label4: ["label4"],
  singleInputField: ["singleInputField", "inputCaption"],
  inputCaption: ["inputCaption"],
  simpleInput2: [
    "simpleInput2",
    "label5",
    "singleInputField2",
    "inputCaption2"
  ],

  label5: ["label5"],
  singleInputField2: ["singleInputField2", "inputCaption2"],
  inputCaption2: ["inputCaption2"],
  simpleInput3: [
    "simpleInput3",
    "label6",
    "singleInputField3",
    "inputCaption3"
  ],

  label6: ["label6"],
  singleInputField3: ["singleInputField3", "inputCaption3"],
  inputCaption3: ["inputCaption3"],
  properties: [
    "properties",
    "simpleInput4",
    "dropdownLightDefault",
    "_3DDesign"
  ],

  simpleInput4: ["simpleInput4", "dropdownLightDefault", "_3DDesign"],
  dropdownLightDefault: ["dropdownLightDefault", "_3DDesign"],
  _3DDesign: ["_3DDesign"],
  uploadFile: ["uploadFile", "title", "uploadField", "frame1009"],
  title: ["title"],
  uploadField: ["uploadField", "frame1009"],
  frame1009: ["frame1009"],
  title2: ["title2"],
  properties2: [
    "properties2",
    "simpleInput5",
    "label7",
    "singleInputField4",
    "inputCaption4",
    "simpleInput6",
    "label8",
    "singleInputField5",
    "inputCaption5"
  ],

  simpleInput5: [
    "simpleInput5",
    "label7",
    "singleInputField4",
    "inputCaption4"
  ],

  label7: ["label7"],
  singleInputField4: ["singleInputField4", "inputCaption4"],
  inputCaption4: ["inputCaption4"],
  simpleInput6: [
    "simpleInput6",
    "label8",
    "singleInputField5",
    "inputCaption5"
  ],

  label8: ["label8"],
  singleInputField5: ["singleInputField5", "inputCaption5"],
  inputCaption5: ["inputCaption5"],
  divider3: ["divider3"],
  buttons2: ["buttons2", "button3", "label9", "button4", "label10"],
  button3: ["button3", "label9"],
  label9: ["label9"],
  button4: ["button4", "label10"],
  label10: ["label10"],
  frame1007: [
    "frame1007",
    "itemCard",
    "productImg",
    "media16",
    "imgLibimg132",
    "michaelDziedzicD6FMtY6XCyMUnsplash1",
    "idkAlbumClean111",
    "itemInfo",
    "titlePrice",
    "usee4Urself",
    "label11",
    "popular",
    "titlePrice2",
    "frame1092",
    "release",
    "highestBid",
    "frame942",
    "label12"
  ],

  itemCard: [
    "itemCard",
    "productImg",
    "media16",
    "imgLibimg132",
    "michaelDziedzicD6FMtY6XCyMUnsplash1",
    "idkAlbumClean111",
    "itemInfo",
    "titlePrice",
    "usee4Urself",
    "label11",
    "popular",
    "titlePrice2",
    "frame1092",
    "release",
    "highestBid"
  ],

  productImg: [
    "productImg",
    "media16",
    "imgLibimg132",
    "michaelDziedzicD6FMtY6XCyMUnsplash1",
    "idkAlbumClean111"
  ],

  media16: ["media16", "imgLibimg132", "michaelDziedzicD6FMtY6XCyMUnsplash1"],
  imgLibimg132: ["imgLibimg132", "michaelDziedzicD6FMtY6XCyMUnsplash1"],
  michaelDziedzicD6FMtY6XCyMUnsplash1: ["michaelDziedzicD6FMtY6XCyMUnsplash1"],
  idkAlbumClean111: ["idkAlbumClean111"],
  itemInfo: [
    "itemInfo",
    "titlePrice",
    "usee4Urself",
    "label11",
    "popular",
    "titlePrice2",
    "frame1092",
    "release",
    "highestBid"
  ],

  titlePrice: ["titlePrice", "usee4Urself", "label11", "popular"],
  usee4Urself: ["usee4Urself"],
  label11: ["label11", "popular"],
  popular: ["popular"],
  titlePrice2: ["titlePrice2", "frame1092", "release", "highestBid"],
  frame1092: ["frame1092", "release", "highestBid"],
  release: ["release"],
  highestBid: ["highestBid"],
  frame942: ["frame942", "label12"],
  label12: ["label12"],
  footerDesktopLight: [
    "footerDesktopLight",
    "divider4",
    "footer05DesktopLight",
    "frame789",
    "frame787",
    "frame774",
    "logo2",
    "letsMakeAGreatDesignTogerther",
    "frame783",
    "crypter",
    "frame726",
    "about",
    "projects",
    "whatWeDo",
    "frame784",
    "info",
    "frame727",
    "frame786",
    "frame785",
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton",
    "bottomBar",
    "divider5",
    "bottomBarContent",
    "copyright2021Ui8LlcAllRightsReserved",
    "frame788",
    "weUseCookiesForBetterService",
    "accept"
  ],

  divider4: ["divider4"],
  footer05DesktopLight: [
    "footer05DesktopLight",
    "frame789",
    "frame787",
    "frame774",
    "logo2",
    "letsMakeAGreatDesignTogerther",
    "frame783",
    "crypter",
    "frame726",
    "about",
    "projects",
    "whatWeDo",
    "frame784",
    "info",
    "frame727",
    "frame786",
    "frame785",
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton",
    "bottomBar",
    "divider5",
    "bottomBarContent",
    "copyright2021Ui8LlcAllRightsReserved",
    "frame788",
    "weUseCookiesForBetterService",
    "accept"
  ],

  frame789: [
    "frame789",
    "frame787",
    "frame774",
    "logo2",
    "letsMakeAGreatDesignTogerther",
    "frame783",
    "crypter",
    "frame726",
    "about",
    "projects",
    "whatWeDo",
    "frame784",
    "info",
    "frame727",
    "frame786",
    "frame785",
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton",
    "bottomBar",
    "divider5",
    "bottomBarContent",
    "copyright2021Ui8LlcAllRightsReserved",
    "frame788",
    "weUseCookiesForBetterService",
    "accept"
  ],

  frame787: [
    "frame787",
    "frame774",
    "logo2",
    "letsMakeAGreatDesignTogerther",
    "frame783",
    "crypter",
    "frame726",
    "about",
    "projects",
    "whatWeDo",
    "frame784",
    "info",
    "frame727",
    "frame786",
    "frame785",
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton"
  ],

  frame774: ["frame774", "logo2", "letsMakeAGreatDesignTogerther"],
  logo2: ["logo2"],
  letsMakeAGreatDesignTogerther: ["letsMakeAGreatDesignTogerther"],
  frame783: [
    "frame783",
    "crypter",
    "frame726",
    "about",
    "projects",
    "whatWeDo"
  ],

  crypter: ["crypter"],
  frame726: ["frame726", "about", "projects", "whatWeDo"],
  about: ["about"],
  projects: ["projects"],
  whatWeDo: ["whatWeDo"],
  frame784: ["frame784", "info", "frame727"],
  info: ["info"],
  frame727: ["frame727"],
  frame786: [
    "frame786",
    "frame785",
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton"
  ],

  frame785: [
    "frame785",
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton"
  ],

  singleInputField6: [
    "singleInputField6",
    "enterYourEmail",
    "smallCircleButton"
  ],

  enterYourEmail: ["enterYourEmail"],
  smallCircleButton: ["smallCircleButton"],
  bottomBar: [
    "bottomBar",
    "divider5",
    "bottomBarContent",
    "copyright2021Ui8LlcAllRightsReserved",
    "frame788",
    "weUseCookiesForBetterService",
    "accept"
  ],

  divider5: ["divider5"],
  bottomBarContent: [
    "bottomBarContent",
    "copyright2021Ui8LlcAllRightsReserved",
    "frame788",
    "weUseCookiesForBetterService",
    "accept"
  ],

  copyright2021Ui8LlcAllRightsReserved: [
    "copyright2021Ui8LlcAllRightsReserved"
  ],

  frame788: ["frame788", "weUseCookiesForBetterService", "accept"],
  weUseCookiesForBetterService: ["weUseCookiesForBetterService"],
  accept: ["accept"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    uploadFilesUploaded: makeNodeComponent("uploadFilesUploaded"),
    uploadFilesUploaded2: makeNodeComponent("uploadFilesUploaded2"),
    navConnectedDesktopLight: makeNodeComponent("navConnectedDesktopLight"),
    navContent: makeNodeComponent("navContent"),
    leftContent: makeNodeComponent("leftContent"),
    logo: makeNodeComponent("logo"),
    divider: makeNodeComponent("divider"),
    actions: makeNodeComponent("actions"),
    buttons: makeNodeComponent("buttons"),
    button: makeNodeComponent("button"),
    label: makeNodeComponent("label"),
    notification: makeNodeComponent("notification"),
    statusNew: makeNodeComponent("statusNew"),
    iconsBellLine: makeNodeComponent("iconsBellLine"),
    notification2Line1: makeNodeComponent("notification2Line1"),
    button2: makeNodeComponent("button2"),
    avatar01: makeNodeComponent("avatar01"),
    austinWadeX6Uj51N5Ce8Unsplash1: makeNodeComponent(
      "austinWadeX6Uj51N5Ce8Unsplash1"
    ),

    frame925: makeNodeComponent("frame925"),
    label2: makeNodeComponent("label2"),
    label3: makeNodeComponent("label3"),
    divider2: makeNodeComponent("divider2"),
    uploadItem02DesktopLight: makeNodeComponent("uploadItem02DesktopLight"),
    itemDetail: makeNodeComponent("itemDetail"),
    frame1001: makeNodeComponent("frame1001"),
    itemDetails: makeNodeComponent("itemDetails"),
    nftDetails: makeNodeComponent("nftDetails"),
    simpleInput: makeNodeComponent("simpleInput"),
    label4: makeNodeComponent("label4"),
    singleInputField: makeNodeComponent("singleInputField"),
    inputCaption: makeNodeComponent("inputCaption"),
    simpleInput2: makeNodeComponent("simpleInput2"),
    label5: makeNodeComponent("label5"),
    singleInputField2: makeNodeComponent("singleInputField2"),
    inputCaption2: makeNodeComponent("inputCaption2"),
    simpleInput3: makeNodeComponent("simpleInput3"),
    label6: makeNodeComponent("label6"),
    singleInputField3: makeNodeComponent("singleInputField3"),
    inputCaption3: makeNodeComponent("inputCaption3"),
    properties: makeNodeComponent("properties"),
    simpleInput4: makeNodeComponent("simpleInput4"),
    dropdownLightDefault: makeNodeComponent("dropdownLightDefault"),
    _3DDesign: makeNodeComponent("_3DDesign"),
    uploadFile: makeNodeComponent("uploadFile"),
    title: makeNodeComponent("title"),
    uploadField: makeNodeComponent("uploadField"),
    frame1009: makeNodeComponent("frame1009"),
    title2: makeNodeComponent("title2"),
    properties2: makeNodeComponent("properties2"),
    simpleInput5: makeNodeComponent("simpleInput5"),
    label7: makeNodeComponent("label7"),
    singleInputField4: makeNodeComponent("singleInputField4"),
    inputCaption4: makeNodeComponent("inputCaption4"),
    simpleInput6: makeNodeComponent("simpleInput6"),
    label8: makeNodeComponent("label8"),
    singleInputField5: makeNodeComponent("singleInputField5"),
    inputCaption5: makeNodeComponent("inputCaption5"),
    divider3: makeNodeComponent("divider3"),
    buttons2: makeNodeComponent("buttons2"),
    button3: makeNodeComponent("button3"),
    label9: makeNodeComponent("label9"),
    button4: makeNodeComponent("button4"),
    label10: makeNodeComponent("label10"),
    frame1007: makeNodeComponent("frame1007"),
    itemCard: makeNodeComponent("itemCard"),
    productImg: makeNodeComponent("productImg"),
    media16: makeNodeComponent("media16"),
    imgLibimg132: makeNodeComponent("imgLibimg132"),
    michaelDziedzicD6FMtY6XCyMUnsplash1: makeNodeComponent(
      "michaelDziedzicD6FMtY6XCyMUnsplash1"
    ),

    idkAlbumClean111: makeNodeComponent("idkAlbumClean111"),
    itemInfo: makeNodeComponent("itemInfo"),
    titlePrice: makeNodeComponent("titlePrice"),
    usee4Urself: makeNodeComponent("usee4Urself"),
    label11: makeNodeComponent("label11"),
    popular: makeNodeComponent("popular"),
    titlePrice2: makeNodeComponent("titlePrice2"),
    frame1092: makeNodeComponent("frame1092"),
    release: makeNodeComponent("release"),
    highestBid: makeNodeComponent("highestBid"),
    frame942: makeNodeComponent("frame942"),
    label12: makeNodeComponent("label12"),
    footerDesktopLight: makeNodeComponent("footerDesktopLight"),
    divider4: makeNodeComponent("divider4"),
    footer05DesktopLight: makeNodeComponent("footer05DesktopLight"),
    frame789: makeNodeComponent("frame789"),
    frame787: makeNodeComponent("frame787"),
    frame774: makeNodeComponent("frame774"),
    logo2: makeNodeComponent("logo2"),
    letsMakeAGreatDesignTogerther: makeNodeComponent(
      "letsMakeAGreatDesignTogerther"
    ),

    frame783: makeNodeComponent("frame783"),
    crypter: makeNodeComponent("crypter"),
    frame726: makeNodeComponent("frame726"),
    about: makeNodeComponent("about"),
    projects: makeNodeComponent("projects"),
    whatWeDo: makeNodeComponent("whatWeDo"),
    frame784: makeNodeComponent("frame784"),
    info: makeNodeComponent("info"),
    frame727: makeNodeComponent("frame727"),
    frame786: makeNodeComponent("frame786"),
    frame785: makeNodeComponent("frame785"),
    singleInputField6: makeNodeComponent("singleInputField6"),
    enterYourEmail: makeNodeComponent("enterYourEmail"),
    smallCircleButton: makeNodeComponent("smallCircleButton"),
    bottomBar: makeNodeComponent("bottomBar"),
    divider5: makeNodeComponent("divider5"),
    bottomBarContent: makeNodeComponent("bottomBarContent"),
    copyright2021Ui8LlcAllRightsReserved: makeNodeComponent(
      "copyright2021Ui8LlcAllRightsReserved"
    ),

    frame788: makeNodeComponent("frame788"),
    weUseCookiesForBetterService: makeNodeComponent(
      "weUseCookiesForBetterService"
    ),

    accept: makeNodeComponent("accept"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
