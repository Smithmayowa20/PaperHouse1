// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 73KhD343S1ps4YNpRNR2Mg
// Component: erKMAXnjBb
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_paper_house.module.css"; // plasmic-import: 73KhD343S1ps4YNpRNR2Mg/projectcss
import sty from "./PlasmicProfile01.module.css"; // plasmic-import: erKMAXnjBb/css

export const PlasmicProfile01__VariantProps = new Array();

export const PlasmicProfile01__ArgProps = new Array();

function PlasmicProfile01__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        />
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicProfile01__ArgProps,
      internalVariantPropNames: PlasmicProfile01__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicProfile01__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicProfile01";
  } else {
    func.displayName = `PlasmicProfile01.${nodeName}`;
  }
  return func;
}

export const PlasmicProfile01 = Object.assign(
  // Top-level PlasmicProfile01 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicProfile01
    internalVariantProps: PlasmicProfile01__VariantProps,
    internalArgProps: PlasmicProfile01__ArgProps
  }
);

export default PlasmicProfile01;
/* prettier-ignore-end */
